[{"path":"https://b-rodrigues.github.io/chronicler/articles/a-non-mathematician-s-introduction-to-monads.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"A non-mathematician's introduction to monads","text":"vignette introduces functional programming concept monad, without going much technical detail. {chronicler} implementation logger monad, truth, necessary know monads use package. However, curious, read . monad computation device offers two things: possibility decorate functions can provide additional output without touch function‚Äôs core implementation; way compose decorated functions; (definition oversimplification actual definition monad, good enough purposes.) understand monad , believe useful explain sort problem monads solve. Suppose instance wish functions provide log ‚Äôre run. function looks like : need rewrite function like : two problems implementation: need rewrite every function need use provide logs; functions don‚Äôt compose. mean ‚Äúfunctions don‚Äôt compose‚Äù? Consider another function my_log(): sqrt() log() compose, rather, can chained: true my_sqrt() my_log(): my_log() expects number, list my_sqrt() returns. ‚Äúmonad‚Äù need solve two problems. first problem, rewrite every function, can tackled using function factories. Let‚Äôs write one problem: can now create functions easily: can call l_sqrt() l_log() decorated functions values return monadic values. second issue remains though; l_sqrt() l_log() can‚Äôt composed/chained. solve issue, need another function, called bind(): Using bind(), now possible compose l_sqrt() l_log(): bind() takes care providing right arguments underlying function. can check result correct comparing $result value returned object log(sqrt(10)): solution using function factory defining helper function make decorated functions compose constitutes monad, strictly speaking, precisely correct. can interesting see actual definition programming language Haskell, pure functional programming language monads must used solve certain issues: (Source: Monad) definition quite cryptic, especially don‚Äôt know Haskell, means Monad (Haskell) something three methods: >>= called bind(); >> didn‚Äôt bother implementing, ‚Äôs really needed understanding monad ; return. Don‚Äôt confused name, nothing return() use inside functions return value. return function wraps (converts) value monadic value, consider object , return takes input returns monadic value m . didn‚Äôt implement return (also called unit, also good name), function factory log_it() return/unit‚Äôs job returns m f() instead m . Using function factories comes naturally R users using return/unit, hence focus return/unit. Also, using function factory, easy implement return/unit: return/unit just identity() function went function factory. sense, function factory even necessary defining monad return/unit. Finally, might read sometimes monads objects flatmap() method. think definition well strictly correct likely oversimplification. flatmap() anyways? practical terms, equivalent bind(), get ‚Äôs different. implement flatmap() two additional functions needed: fmap() flatten() (quite often called join(), nothing joining data frames, used flatten() instead). fmap() function takes monadic value argument undecorated function applies undecorated function monadic value: Let‚Äôs first define monadic value: Let‚Äôs now use fmap() apply non-decorated function m: Great, now flatten() (join())? useful? Suppose instead log() used l_log() fmap() (‚Äôre using decorated function instead undecorated one): can see output, produced nested list, monadic value value monadic value. like flatten()/join() take care us. implementation flatten(): Let‚Äôs try now: Great! Now, explained earlier, flatmap() bind() thing. implemented flatten() fmap(), two functions relate flatmap()? turns flatmap() composition flatten() fmap(): means can now replace: : get result (well, quite, since log different). prefer introducing monads using bind(), bind() comes natural solution problem decorated functions composing. flatmap(), applications might easier first define flatten() join() get flatmap() instead trying write bind() directly, ‚Äôs good know approaches. continuing final part introduction, just want share lists also monads. everything need: .list() unit(), purrr::map() fmap() purrr::flatten() flatten(). means can obtain flatmap() composing purrr::flatten() purrr::map(): (thanks @armcn_ showing ) sum, monads useful need values also carry something . something can log, shown , many examples. another example monad implemented R package, see maybe monad. {chronicle} actually takes advantage maybe package uses maybe monad handle cases functions fail. provide short introduction maybe monad Maybe monad vignette.","code":"my_sqrt <- function(x){    sqrt(x)  } my_sqrt <- function(x, log = \"\"){    list(sqrt(x),        c(log,          paste0(\"Running sqrt with input \", x)))  } my_log <- function(x, log = \"\"){    list(log(x),        c(log,          paste0(\"Running log with input \", x)))  } 10 |>   sqrt() |>   log() #> [1] 1.151293 10 |>   my_sqrt() |>   my_log() Error in log(x) (from #3) : non-numeric argument to mathematical function log_it <- function(.f, ..., log = NULL){    fstring <- deparse(substitute(.f))    function(..., .log = log){      list(result = .f(...),          log = c(.log,                  paste0(\"Running \", fstring, \" with argument \", ...)))   } } l_sqrt <- log_it(sqrt)  l_sqrt(10) #> $result #> [1] 3.162278 #>  #> $log #> [1] \"Running sqrt with argument 10\"  l_log <- log_it(log)  l_log(10) #> $result #> [1] 2.302585 #>  #> $log #> [1] \"Running log with argument 10\" bind <- function(.l, .f, ...){    .f(.l$result, ..., .log = .l$log)  } 10 |>   l_sqrt() |>   bind(l_log) #> $result #> [1] 1.151293 #>  #> $log #> [1] \"Running sqrt with argument 10\"              #> [2] \"Running log with argument 3.16227766016838\" log(sqrt(10)) #> [1] 1.151293 class Monad m where   (>>=)  :: m a -> (  a -> m b) -> m b   (>>)   :: m a ->  m b         -> m b   return ::   a                 -> m a unit <- log_it(identity) fmap <- function(m, f, ...){    fstring <- deparse(substitute(f))    list(result = f(m$result, ...),        log = c(m$log,                paste0(\"fmapping \", fstring, \" with arguments \", paste0(m$result, ..., collapse = \",\")))) } # Let‚Äôs use unit(), which we defined above, for this.  (m <- unit(10)) #> $result #> [1] 10 #>  #> $log #> [1] \"Running identity with argument 10\" fmap(m, log) #> $result #> [1] 2.302585 #>  #> $log #> [1] \"Running identity with argument 10\" \"fmapping log with arguments 10\" fmap(m, l_log) #> $result #> $result$result #> [1] 2.302585 #>  #> $result$log #> [1] \"Running log with argument 10\" #>  #>  #> $log #> [1] \"Running identity with argument 10\" \"fmapping l_log with arguments 10\" flatten <- function(m){    list(result = m$result$result,        log = c(m$log))  } flatten(fmap(m, l_log)) #> $result #> [1] 2.302585 #>  #> $log #> [1] \"Running identity with argument 10\" \"fmapping l_log with arguments 10\" # I first define a composition operator for functions `%.%` <- \\(f,g)(function(...)(f(g(...))))  # I now compose flatten() and fmap() # flatten %.% fmap is read as \"flatten after fmap\" flatmap <- flatten %.% fmap 10 |>   l_sqrt() |>   bind(l_log) #> $result #> [1] 1.151293 #>  #> $log #> [1] \"Running sqrt with argument 10\"              #> [2] \"Running log with argument 3.16227766016838\" 10 |>   l_sqrt() |>   flatmap(l_log) #> $result #> [1] 1.151293 #>  #> $log #> [1] \"Running sqrt with argument 10\"                  #> [2] \"fmapping l_log with arguments 3.16227766016838\" # Since I'm using `{purrr}`, might as well use purrr::compose() instead of my own implementation flatmap_list <- purrr::compose(purrr::flatten, purrr::map)  # Functions that return lists: they don't compose! # no worries, we implemented `flatmap_list()` list_sqrt <- \\(x)(as.list(sqrt(x))) list_log <- \\(x)(as.list(log(x)))  10 |>   list_sqrt() |>   flatmap_list(list_log) #> [[1]] #> [1] 1.151293"},{"path":"https://b-rodrigues.github.io/chronicler/articles/a-non-mathematician-s-introduction-to-monads.html","id":"monadic-laws","dir":"Articles","previous_headings":"","what":"Monadic laws","title":"A non-mathematician's introduction to monads","text":"Monads need satisfy -called ‚Äúmonadic laws‚Äù. ‚Äôre going verify monad implemented {chronicler} satisfies monadic laws.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/articles/a-non-mathematician-s-introduction-to-monads.html","id":"first-law","dir":"Articles","previous_headings":"Monadic laws","what":"First law","title":"A non-mathematician's introduction to monads","text":"first law states passing monadic value monadic function using bind() (case {chronicler} package bind_record()) passing value monadic function . Turns quite case ; logs two objects slightly different. check value.","code":"a <- as_chronicle(10) r_sqrt <- record(sqrt)  testthat::test_that(\"first monadic law\", {   testthat::expect_equal(bind_record(a, r_sqrt)$value, r_sqrt(10)$value) }) #> Test passed ü•á"},{"path":"https://b-rodrigues.github.io/chronicler/articles/a-non-mathematician-s-introduction-to-monads.html","id":"second-law","dir":"Articles","previous_headings":"Monadic laws","what":"Second law","title":"A non-mathematician's introduction to monads","text":"second law states binding monadic value return() (called as_chronicle() package, words, function coerces values chronicler objects) nothing. issue log, ‚Äôs focus value:","code":"testthat::test_that(\"second monadic law\", {   testthat::expect_equal(bind_record(a, as_chronicle)$value, a$value) }) #> Test passed üéä"},{"path":"https://b-rodrigues.github.io/chronicler/articles/a-non-mathematician-s-introduction-to-monads.html","id":"third-law","dir":"Articles","previous_headings":"Monadic laws","what":"Third law","title":"A non-mathematician's introduction to monads","text":"third law associativity; applying monadic functions successively composing first gives result.","code":"a <- as_chronicle(10)  r_sqrt <- record(sqrt) r_exp <- record(exp) r_mean <- record(mean)  testthat::test_that(\"third monadic law\", {   testthat::expect_equal(   (     (bind_record(a, r_sqrt)) |>    bind_record(r_exp)   )$value,   (     a |>     (\\(x) bind_record(x, r_sqrt) |> bind_record(r_exp))()   )$value   ) }) #> Test passed üåà"},{"path":"https://b-rodrigues.github.io/chronicler/articles/a-non-mathematician-s-introduction-to-monads.html","id":"flatmap-for-chronicle-objects","dir":"Articles","previous_headings":"","what":"flatmap() for chronicle objects","title":"A non-mathematician's introduction to monads","text":"exhaustivity‚Äôs sake, check can get flatmap_record() composing flatten_record() fmap_record():","code":"r_sqrt <- record(sqrt) r_exp <- record(exp) r_mean <- record(mean)  a <- 1:10 |>   r_sqrt() |>   bind_record(r_exp) |>   bind_record(r_mean)  flatmap_record <- purrr::compose(flatten_record, fmap_record)  b <- 1:10 |>   r_sqrt() |>   flatmap_record(r_exp) |>   flatmap_record(r_mean)  identical(a$value, b$value) #> [1] TRUE"},{"path":"https://b-rodrigues.github.io/chronicler/articles/recording-ggplot.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Recording ggplot Objects with chronicler","text":"Working ggplot2 can present unique challenge: lazy evaluation. error plot code, like typo variable name, won‚Äôt stop execution define plot. error appears try print render . can especially frustrating rendering long R Markdown Quarto document, single broken plot can cause entire process fail. {chronicler} provides solution record_ggplot(). function acts safety net, wrapping entire ggplot expression recorder safely evaluates . captures final plot, also errors, warnings, messages occur construction. process results two key benefits: Crash-Proof Rendering: plot fails, record_ggplot() catches error produces placeholder error plot displays error message. allows R Markdown documents render completely, letting fix broken plot later. Enhanced Debugging: Every step logged. get detailed, reproducible trace plot‚Äôs construction, making much easier diagnose issues. vignette demonstrates use record_ggplot() make plotting workflows robust debuggable.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/articles/recording-ggplot.html","id":"basic-recording-and-inspection","dir":"Articles","previous_headings":"","what":"Basic Recording and Inspection","title":"Recording ggplot Objects with chronicler","text":"Let‚Äôs start recording valid ggplot expression. record_ggplot() captures entire call, including layers. resulting r_plot object chronicle. print , ggplot object rendered usual. Behind scenes, however, {chronicler} logged entire process. get raw ggplot object back, can use unveil():  see detailed log, including messages generated rendering (like one geom_smooth), use read_log():","code":"r_plot <- record_ggplot(   ggplot(mtcars, aes(x = mpg, y = hp)) +     geom_point() +   geom_smooth(method = \"lm\", formula = y~x) ) unveil(r_plot) read_log(r_plot) #> [1] \"OK `ggplot(mtcars, aes(x = mpg, y = hp)) + geom_point() + geom_smooth(method = \\\"lm\\\", \\n    formula = y ~ x)` at 11:39:18 (0.771s)\" #> [2] \"Total: 0.771 secs\""},{"path":"https://b-rodrigues.github.io/chronicler/articles/recording-ggplot.html","id":"handling-failures-gracefully","dir":"Articles","previous_headings":"","what":"Handling Failures Gracefully","title":"Recording ggplot Objects with chronicler","text":"real power record_ggplot() becomes apparent something goes wrong.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/articles/recording-ggplot.html","id":"capturing-errors","dir":"Articles","previous_headings":"Handling Failures Gracefully","what":"Capturing Errors","title":"Recording ggplot Objects with chronicler","text":"Consider common typo, hp misspelled hpp. standard ggplot call throw error upon printing. record_ggplot(), error caught logged, informative error plot generated instead.  R session continues without interruption, clear record problem.","code":"r_bad <- record_ggplot(   ggplot(mtcars, aes(x = mpg, y = hpp)) +  # typo: 'hpp'     geom_point() )  # Printing the object shows the error plot, not a crash r_bad #> NOK! Value computed unsuccessfully: #> --------------- #> Just #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c).  # The log tells you exactly what went wrong read_log(r_bad) #> [1] \"NOK `ggplot(mtcars, aes(x = mpg, y = hpp)) + geom_point()` at 11:39:20 (0.043s)\" #> [2] \"Total: 0.043 secs\""},{"path":"https://b-rodrigues.github.io/chronicler/articles/recording-ggplot.html","id":"controlling-strictness","dir":"Articles","previous_headings":"Handling Failures Gracefully","what":"Controlling Strictness","title":"Recording ggplot Objects with chronicler","text":"Sometimes, may want treat messages warnings failures. strict argument gives control. example, geom_smooth() produces message formula ‚Äôs using. setting strict = 3, can tell record_ggplot treat message critical event generate error plot. Now, instead plot, see captured message displayed error plot:","code":"r_plot_strict <- record_ggplot(   ggplot(mtcars, aes(x = mpg, y = hp)) +     geom_point() +     geom_smooth(method = \"lm\"),   strict = 3 ) unveil(r_plot_strict)"},{"path":"https://b-rodrigues.github.io/chronicler/articles/recording-ggplot.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Recording ggplot Objects with chronicler","text":"record_ggplot() provides safe traceable way build ggplot objects. wrapping plot code, makes complex plots easier debug prevents common errors halting analysis document rendering. transforms plot creation potentially disruptive step logged, reproducible, robust part workflow.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bruno Rodrigues. Author, maintainer, copyright holder. Matou≈° Eibich. Contributor.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rodrigues B (2025). chronicler: Add Logging Functions. R package version 0.3.0.","code":"@Manual{,   title = {chronicler: Add Logging to Functions},   author = {Bruno Rodrigues},   year = {2025},   note = {R package version 0.3.0}, }"},{"path":"https://b-rodrigues.github.io/chronicler/index.html","id":"chronicler-","dir":"","previous_headings":"","what":"Add Logging to Functions","title":"Add Logging to Functions","text":"Easily add logs functions, without interfering global environment.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Add Logging to Functions","text":"package available CRAN. Install : can install development version GitHub :","code":"install.packages(\"chronicler\") # install.packages(\"devtools\") devtools::install_github(\"b-rodrigues/chronicler\")"},{"path":"https://b-rodrigues.github.io/chronicler/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Add Logging to Functions","text":"{chronicler} provides record() function, allows modify functions provide enhanced output. enhanced output consists detailed log, chaining decorated functions, becomes possible complete trace operations led final output. decorated functions work exactly undecorated counterparts, care required correctly handling . introduction give quick overview package‚Äôs functionality. Let‚Äôs first start simple example, decorating sqrt() function: Object now object class chronicle. Let‚Äôs take closer look : now made several parts. first part: simply provides result sqrt() applied 1:5 (let‚Äôs ignore word Just third line now; details see Maybe Monad vignette). second part tells ‚Äôs : value sqrt() function applied arguments can obtained using unveil(), explained: log also gets generated can read using read_log(): especially useful objects get created using multiple calls: (bind_record() used chain multiple decorated functions explained detail next section.) record() works function, yet ggplot2. avoid define every function individually, like : can use record_many() function. record_many() takes list functions (strings) input puts generated code system‚Äôs clipboard. can paste code text editor. gif illustrates record_many() works: record_many() action","code":"library(chronicler)  r_sqrt <- record(sqrt)  a <- r_sqrt(1:5) a #> OK! Value computed successfully: #> --------------- #> Just #> [1] 1.000000 1.414214 1.732051 2.000000 2.236068 #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). OK! Value computed successfully: --------------- Just [1] 1.000000 1.414214 1.732051 2.000000 2.236068 --------------- This is an object of type `chronicle`. Retrieve the value of this object with unveil(.c, \"value\"). To read the log of this object, call read_log(). unveil(a, \"value\") #> [1] 1.000000 1.414214 1.732051 2.000000 2.236068 read_log(a) #> [1] \"Complete log:\"                                                #> [2] \"OK! sqrt(1:5) ran successfully at 2025-08-14 18:00:21.763918\" #> [3] \"Total running time: 0.000140666961669922\" r_sqrt <- record(sqrt) r_exp <- record(exp) r_mean <- record(mean)  b <- 1:10 |>   r_sqrt() |>   bind_record(r_exp) |>   bind_record(r_mean) read_log(b) #> [1] \"Complete log:\"                                                                                                   #> [2] \"OK! sqrt(1:10) ran successfully at 2025-08-14 18:00:21.784513\"                                                   #> [3] \"OK! exp(maybe::from_maybe(.c$value, default = maybe::nothing())) ran successfully at 2025-08-14 18:00:21.786459\" #> [4] \"OK! mean(maybe::from_maybe(.c$value, default = maybe::nothing())) ran successfully at 2025-08-14 18:00:21.78825\" #> [5] \"Total running time: 0.000123739242553711\"  unveil(b, \"value\") #> [1] 11.55345 r_sqrt <- record(sqrt) r_exp <- record(exp) r_mean <- record(mean)"},{"path":"https://b-rodrigues.github.io/chronicler/index.html","id":"chaining-decorated-functions","dir":"","previous_headings":"","what":"Chaining decorated functions","title":"Add Logging to Functions","text":"bind_record() used pass output one decorated function next: value can accessed worked usual using unveil(), explained : package also ships dedicated pipe, %>=% can use instead bind_record(): Using %>=% recommended non-interactive sessions bind_record() recommend settings.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2)  r_group_by <- record(group_by) r_select <- record(select) r_summarise <- record(summarise) r_filter <- record(filter)  output <- starwars %>%   r_select(height, mass, species, sex) %>%   bind_record(r_group_by, species, sex) %>%   bind_record(r_filter, sex != \"male\") %>%   bind_record(r_summarise,               mass = mean(mass, na.rm = TRUE)               ) read_log(output) #> [1] \"Complete log:\"                                                                                                                  #> [2] \"OK! select(., height, mass, species, sex) ran successfully at 2025-08-14 18:00:21.808905\"                                       #> [3] \"OK! group_by(maybe::from_maybe(.c$value, default = maybe::nothing()), ..1, ..2) ran successfully at 2025-08-14 18:00:21.812847\" #> [4] \"OK! filter(maybe::from_maybe(.c$value, default = maybe::nothing()), ..1) ran successfully at 2025-08-14 18:00:21.816776\"        #> [5] \"OK! summarise(maybe::from_maybe(.c$value, default = maybe::nothing()), ..1) ran successfully at 2025-08-14 18:00:21.820334\"     #> [6] \"Total running time: 0.00961780548095703\" unveil(output, \"value\") #> # A tibble: 9 √ó 3 #> # Groups:   species [9] #>   species    sex              mass #>   <chr>      <chr>           <dbl> #> 1 Clawdite   female           55   #> 2 Droid      none             69.8 #> 3 Human      female           56.3 #> 4 Hutt       hermaphroditic 1358   #> 5 Kaminoan   female          NaN   #> 6 Mirialan   female           53.1 #> 7 Tholothian female           50   #> 8 Togruta    female           57   #> 9 Twi'lek    female           55 output_pipe <- starwars %>%   r_select(height, mass, species, sex) %>=%   r_group_by(species, sex) %>=%   r_filter(sex != \"male\") %>=%   r_summarise(mean_mass = mean(mass, na.rm = TRUE)) unveil(output_pipe, \"value\") #> # A tibble: 9 √ó 3 #> # Groups:   species [9] #>   species    sex            mean_mass #>   <chr>      <chr>              <dbl> #> 1 Clawdite   female              55   #> 2 Droid      none                69.8 #> 3 Human      female              56.3 #> 4 Hutt       hermaphroditic    1358   #> 5 Kaminoan   female             NaN   #> 6 Mirialan   female              53.1 #> 7 Tholothian female              50   #> 8 Togruta    female              57   #> 9 Twi'lek    female              55"},{"path":"https://b-rodrigues.github.io/chronicler/index.html","id":"condition-handling","dir":"","previous_headings":"","what":"Condition handling","title":"Add Logging to Functions","text":"default, errors warnings get caught composed log: Reading log tells function failed, error message: also possible capture errors, capture errors, warnings messages using strict parameter record()","code":"errord_output <- starwars %>%   r_select(height, mass, species, sex) %>=%    r_group_by(species, sx) %>=% # typo, \"sx\" instead of \"sex\"   r_filter(sex != \"male\") %>=%   r_summarise(mass = mean(mass, na.rm = TRUE)) errord_output #> NOK! Value computed unsuccessfully: #> --------------- #> Nothing #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). read_log(errord_output) #> [1] \"Complete logselect(., height, mass, species, sex) ran successfully atgroup_by(c(\\\"structure(list(height = c(172L, 167L, 96L, 202L, 150L, 178L, \\\", \\\"165L, 97L, 183L, 182L, 188L, 180L, 228L, 180L, 173L, 175L, 170L, \\\", \\\"180L, 66L, 170L, 183L, 200L, 190L, 177L, 175L, 180L, 150L, NA, \\\", \\\"88L, 160L, 193L, 191L, 170L, 185L, 196L, 224L, 206L, 183L, 137L, \\\", \\\"112L, 183L, 163L, 175L, 180L, 178L, 79L, 94L, 122L, 163L, 188L, \\\", \\\"198L, 196L, 171L, 184L, 188L, 264L, 188L, 196L, 185L, 157L, 183L, \\\", \\\"183L, 170L, 166L, 165L, 193L, 191L, 183L, 168L, 198L, 229L, 213L, \\\", \\\"167L, 96L, 193L, 191L, 178L, 216L, 234L, 188L, 178L, 206L, NA, \\\", \\n\\\"NA, NA, NA, NA), mass = c(77, 75, 32, 136, 49, 120, 75, 32, 84, \\\", \\\"77, 84, NA, 112, 80, 74, 1358, 77, 110, 17, 75, 78.2, 140, 113, \\\", \\\"79, 79, 83, NA, NA, 20, 68, 89, 90, NA, 45, 66, 82, NA, NA, NA, \\\", \\\"40, NA, NA, 80, NA, 55, 15, 45, NA, 65, 84, 82, 87, NA, 50, NA, \\\", \\\"NA, 80, NA, 85, NA, NA, 80, 56.2, 50, NA, 80, NA, 79, 55, 102, \\\", \\\"88, NA, NA, NA, 48, NA, 57, 159, 136, 79, 48, 80, NA, NA, NA, \\\", \\\"NA, NA), species = c(\\\\\\\"Human\\\\\\\", \\\\\\\"Droid\\\\\\\", \\\\\\\"Droid\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\", \\\"\\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Droid\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\", \\n\\\"\\\\\\\"Wookiee\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Rodian\\\\\\\", \\\\\\\"Hutt\\\\\\\", \\\\\\\"Human\\\\\\\", NA, \\\\\\\"Yoda's species\\\\\\\", \\\", \\\"\\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Droid\\\\\\\", \\\\\\\"Trandoshan\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Mon Calamari\\\\\\\", \\\", \\\"\\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Ewok\\\\\\\", \\\\\\\"Sullustan\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Neimodian\\\\\\\", \\\", \\\"\\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Gungan\\\\\\\", \\\\\\\"Gungan\\\\\\\", \\\\\\\"Gungan\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Toydarian\\\\\\\", \\\", \\\"\\\\\\\"Dug\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Zabrak\\\\\\\", \\\\\\\"Twi'lek\\\\\\\", \\\\\\\"Twi'lek\\\\\\\", \\\\\\\"Aleena\\\\\\\", \\\", \\\"\\\\\\\"Vulptereen\\\\\\\", \\\\\\\"Xexto\\\\\\\", \\\\\\\"Toong\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Cerean\\\\\\\", \\\\\\\"Nautolan\\\\\\\", \\\", \\n\\\"\\\\\\\"Zabrak\\\\\\\", \\\\\\\"Tholothian\\\\\\\", \\\\\\\"Iktotchi\\\\\\\", \\\\\\\"Quermian\\\\\\\", \\\\\\\"Kel Dor\\\\\\\", \\\\\\\"Chagrian\\\\\\\", \\\", \\\"NA, NA, \\\\\\\"Human\\\\\\\", \\\\\\\"Geonosian\\\\\\\", \\\\\\\"Mirialan\\\\\\\", \\\\\\\"Mirialan\\\\\\\", \\\\\\\"Human\\\\\\\", \\\", \\\"\\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Clawdite\\\\\\\", \\\\\\\"Besalisk\\\\\\\", \\\\\\\"Kaminoan\\\\\\\", \\\", \\\"\\\\\\\"Kaminoan\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Droid\\\\\\\", \\\\\\\"Skakoan\\\\\\\", \\\\\\\"Muun\\\\\\\", \\\\\\\"Togruta\\\\\\\", \\\\\\\"Kaleesh\\\\\\\", \\\", \\\"\\\\\\\"Wookiee\\\\\\\", \\\\\\\"Human\\\\\\\", NA, \\\\\\\"Pau'an\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\\\\\"Human\\\\\\\", \\\", \\\"\\\\\\\"Droid\\\\\\\", \\\\\\\"Human\\\\\\\"), sex = c(\\\\\\\"male\\\\\\\", \\\\\\\"none\\\\\\\", \\\\\\\"none\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"female\\\\\\\", \\\", \\\"\\\\\\\"male\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"none\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\", \\n\\\"\\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"hermaphroditic\\\\\\\", \\\\\\\"male\\\\\\\", NA, \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\", \\\"\\\\\\\"male\\\\\\\", \\\\\\\"none\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"male\\\\\\\", \\\", \\\"\\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\", \\\"\\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\", \\\"\\\\\\\"female\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\", \\\"\\\\\\\"male\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", NA, NA, \\\\\\\"male\\\\\\\", \\\", \\n\\\"\\\\\\\"male\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\", \\\"\\\\\\\"female\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"none\\\\\\\", \\\\\\\"male\\\\\\\", \\\", \\\"\\\\\\\"male\\\\\\\", \\\\\\\"female\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", NA, \\\\\\\"male\\\\\\\", \\\\\\\"male\\\\\\\", \\\", \\\"\\\\\\\"female\\\\\\\", \\\\\\\"male\\\\\\\", \\\\\\\"none\\\\\\\", \\\\\\\"female\\\\\\\")), row.names = c(NA, -87L), class = c(\\\\\\\"tbl_df\\\\\\\", \\\", \\\"\\\\\\\"tbl\\\\\\\", \\\\\\\"data.frame\\\\\\\"))\\\"), species, sx) ran unsuccessfully with following exception: Must group by variables found in `.data`.\\n‚úñ Column `sx` is not found. at 2025-08-14 18:00:21.872748\" #> [4] \"NOK! filter(structure(list(type = \\\"nothing\\\"), class = \\\"maybe\\\"), sex != \\\"male\\\") ran unsuccessfully with following exception: Pipeline failed upstream atsummarise(structure(list(type = \\\"nothing\\\"), class = \\\"maybe\\\"), mean(mass, na.rm = TRUE)) ran unsuccessfully with following exception: Pipeline failed upstream atotal running time: 0.0243434906005859\" # Only errors:  r_sqrt <- record(sqrt, strict = 1)  r_sqrt(-10) |>   read_log() #> Warning in .f(.value, ...): NaNs produced #> [1] \"Complete log:\"                                                #> [2] \"OK! sqrt(-10) ran successfully at 2025-08-14 18:00:21.916445\" #> [3] \"Total running time: 0.000190973281860352\"  # Errors and warnings:  r_sqrt <- record(sqrt, strict = 2)  r_sqrt(-10) |>   read_log() #> [1] \"Complete log:\"                                                                                          #> [2] \"NOK! sqrt(-10) ran unsuccessfully with following exception: NaNs produced at 2025-08-14 18:00:21.91918\" #> [3] \"Total running time: 9.70363616943359e-05\"  # Errors, warnings and messages  my_f <- function(x){   message(\"this is a message\")   10 }  record(my_f, strict = 3)(10) |>                          read_log() #> [1] \"Complete log:\"                                                                                                #> [2] \"NOK! my_f(10) ran unsuccessfully with following exception: this is a message\\n at 2025-08-14 18:00:21.921752\" #> [3] \"Total running time: 0.000112295150756836\""},{"path":"https://b-rodrigues.github.io/chronicler/index.html","id":"advanced-logging","dir":"","previous_headings":"","what":"Advanced logging","title":"Add Logging to Functions","text":"can provide function record(), evaluated output. makes possible , example, monitor size data frame throughout pipeline: $log_df element chronicle object contains detailed information: thus possible take look output function provided (dim()) using check_g(): can see dimension dataframe (87, 4) call select(), (23, 4) call filter() finally (9, 3) call summarise(). Another possibility advanced logging use diff argument record, defaults ‚Äúnone‚Äù. Setting ‚Äúfull‚Äù provides, step workflow, diff input output: Let‚Äôs compare input output r_filter(sex != \"male\"): familiar version control software Git, problem reading output. input data frame 87 rows 4 columns, output 23 rows. Rows input, got removed output, highlighted (terminal, , due color scheme). diff set ‚Äúsummary‚Äù, summary provided: combining .g diff, possible clear overview happened first input throughout pipeline. diff functionality provided diffobj package.","code":"r_group_by <- record(group_by) r_select <- record(select, .g = dim) r_summarise <- record(summarise, .g = dim) r_filter <- record(filter, .g = dim)  output_pipe <- starwars %>%   r_select(height, mass, species, sex) %>=%   r_group_by(species, sex) %>=%   r_filter(sex != \"male\") %>=%   r_summarise(mass = mean(mass, na.rm = TRUE)) unveil(output_pipe, \"log_df\") #>   ops_number     outcome  function #> 1          1 OK! Success    select #> 2          2 OK! Success  group_by #> 3          3 OK! Success    filter #> 4          4 OK! Success summarise #>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      argumentsheight, mass, species, sexc(\"structure(list(height = c(172L, 167L, 96L, 202L, 150L, 178L, \", \"165L, 97L, 183L, 182L, 188L, 180L, 228L, 180L, 173L, 175L, 170L, \", \"180L, 66L, 170L, 183L, 200L, 190L, 177L, 175L, 180L, 150L, NA, \", \"88L, 160L, 193L, 191L, 170L, 185L, 196L, 224L, 206L, 183L, 137L, \", \"112L, 183L, 163L, 175L, 180L, 178L, 79L, 94L, 122L, 163L, 188L, \", \"198L, 196L, 171L, 184L, 188L, 264L, 188L, 196L, 185L, 157L, 183L, \", \"183L, 170L, 166L, 165L, 193L, 191L, 183L, 168L, 198L, 229L, 213L, \", \"167L, 96L, 193L, 191L, 178L, 216L, 234L, 188L, 178L, 206L, NA, \", \\n\"NA, NA, NA, NA), mass = c(77, 75, 32, 136, 49, 120, 75, 32, 84, \", \"77, 84, NA, 112, 80, 74, 1358, 77, 110, 17, 75, 78.2, 140, 113, \", \"79, 79, 83, NA, NA, 20, 68, 89, 90, NA, 45, 66, 82, NA, NA, NA, \", \"40, NA, NA, 80, NA, 55, 15, 45, NA, 65, 84, 82, 87, NA, 50, NA, \", \"NA, 80, NA, 85, NA, NA, 80, 56.2, 50, NA, 80, NA, 79, 55, 102, \", \"88, NA, NA, NA, 48, NA, 57, 159, 136, 79, 48, 80, NA, NA, NA, \", \"NA, NA), species = c(\\\\\"Human\\\\\", \\\\\"Droid\\\\\", \\\\\"Droid\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Droid\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \", \\n\"\\\\\"Wookiee\\\\\", \\\\\"Human\\\\\", \\\\\"Rodian\\\\\", \\\\\"Hutt\\\\\", \\\\\"Human\\\\\", NA, \\\\\"Yoda's species\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Droid\\\\\", \\\\\"Trandoshan\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Mon Calamari\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Ewok\\\\\", \\\\\"Sullustan\\\\\", \\\\\"Human\\\\\", \\\\\"Neimodian\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Gungan\\\\\", \\\\\"Gungan\\\\\", \\\\\"Gungan\\\\\", \\\\\"Human\\\\\", \\\\\"Toydarian\\\\\", \", \"\\\\\"Dug\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Zabrak\\\\\", \\\\\"Twi'lek\\\\\", \\\\\"Twi'lek\\\\\", \\\\\"Aleena\\\\\", \", \"\\\\\"Vulptereen\\\\\", \\\\\"Xexto\\\\\", \\\\\"Toong\\\\\", \\\\\"Human\\\\\", \\\\\"Cerean\\\\\", \\\\\"Nautolan\\\\\", \", \\n\"\\\\\"Zabrak\\\\\", \\\\\"Tholothian\\\\\", \\\\\"Iktotchi\\\\\", \\\\\"Quermian\\\\\", \\\\\"Kel Dor\\\\\", \\\\\"Chagrian\\\\\", \", \"NA, NA, \\\\\"Human\\\\\", \\\\\"Geonosian\\\\\", \\\\\"Mirialan\\\\\", \\\\\"Mirialan\\\\\", \\\\\"Human\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Clawdite\\\\\", \\\\\"Besalisk\\\\\", \\\\\"Kaminoan\\\\\", \", \"\\\\\"Kaminoan\\\\\", \\\\\"Human\\\\\", \\\\\"Droid\\\\\", \\\\\"Skakoan\\\\\", \\\\\"Muun\\\\\", \\\\\"Togruta\\\\\", \\\\\"Kaleesh\\\\\", \", \"\\\\\"Wookiee\\\\\", \\\\\"Human\\\\\", NA, \\\\\"Pau'an\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \", \"\\\\\"Droid\\\\\", \\\\\"Human\\\\\"), sex = c(\\\\\"male\\\\\", \\\\\"none\\\\\", \\\\\"none\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \", \"\\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"none\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \\n\"\\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"hermaphroditic\\\\\", \\\\\"male\\\\\", NA, \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"none\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", NA, NA, \\\\\"male\\\\\", \", \\n\"\\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"none\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", NA, \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"none\\\\\", \\\\\"female\\\\\")), row.names = c(NA, -87L), class = c(\\\\\"tbl_df\\\\\", \", \"\\\\\"tbl\\\\\", \\\\\"data.frame\\\\\"))\"), species, sex #> 3 c(\"structure(list(height = c(172L, 167L, 96L, 202L, 150L, 178L, \", \"165L, 97L, 183L, 182L, 188L, 180L, 228L, 180L, 173L, 175L, 170L, \", \"180L, 66L, 170L, 183L, 200L, 190L, 177L, 175L, 180L, 150L, NA, \", \"88L, 160L, 193L, 191L, 170L, 185L, 196L, 224L, 206L, 183L, 137L, \", \"112L, 183L, 163L, 175L, 180L, 178L, 79L, 94L, 122L, 163L, 188L, \", \"198L, 196L, 171L, 184L, 188L, 264L, 188L, 196L, 185L, 157L, 183L, \", \"183L, 170L, 166L, 165L, 193L, 191L, 183L, 168L, 198L, 229L, 213L, \", \"167L, 96L, 193L, 191L, 178L, 216L, 234L, 188L, 178L, 206L, NA, \", \\n\"NA, NA, NA, NA), mass = c(77, 75, 32, 136, 49, 120, 75, 32, 84, \", \"77, 84, NA, 112, 80, 74, 1358, 77, 110, 17, 75, 78.2, 140, 113, \", \"79, 79, 83, NA, NA, 20, 68, 89, 90, NA, 45, 66, 82, NA, NA, NA, \", \"40, NA, NA, 80, NA, 55, 15, 45, NA, 65, 84, 82, 87, NA, 50, NA, \", \"NA, 80, NA, 85, NA, NA, 80, 56.2, 50, NA, 80, NA, 79, 55, 102, \", \"88, NA, NA, NA, 48, NA, 57, 159, 136, 79, 48, 80, NA, NA, NA, \", \"NA, NA), species = c(\\\\\"Human\\\\\", \\\\\"Droid\\\\\", \\\\\"Droid\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Droid\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \", \\n\"\\\\\"Wookiee\\\\\", \\\\\"Human\\\\\", \\\\\"Rodian\\\\\", \\\\\"Hutt\\\\\", \\\\\"Human\\\\\", NA, \\\\\"Yoda's species\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Droid\\\\\", \\\\\"Trandoshan\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Mon Calamari\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Ewok\\\\\", \\\\\"Sullustan\\\\\", \\\\\"Human\\\\\", \\\\\"Neimodian\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Gungan\\\\\", \\\\\"Gungan\\\\\", \\\\\"Gungan\\\\\", \\\\\"Human\\\\\", \\\\\"Toydarian\\\\\", \", \"\\\\\"Dug\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Zabrak\\\\\", \\\\\"Twi'lek\\\\\", \\\\\"Twi'lek\\\\\", \\\\\"Aleena\\\\\", \", \"\\\\\"Vulptereen\\\\\", \\\\\"Xexto\\\\\", \\\\\"Toong\\\\\", \\\\\"Human\\\\\", \\\\\"Cerean\\\\\", \\\\\"Nautolan\\\\\", \", \\n\"\\\\\"Zabrak\\\\\", \\\\\"Tholothian\\\\\", \\\\\"Iktotchi\\\\\", \\\\\"Quermian\\\\\", \\\\\"Kel Dor\\\\\", \\\\\"Chagrian\\\\\", \", \"NA, NA, \\\\\"Human\\\\\", \\\\\"Geonosian\\\\\", \\\\\"Mirialan\\\\\", \\\\\"Mirialan\\\\\", \\\\\"Human\\\\\", \", \"\\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Clawdite\\\\\", \\\\\"Besalisk\\\\\", \\\\\"Kaminoan\\\\\", \", \"\\\\\"Kaminoan\\\\\", \\\\\"Human\\\\\", \\\\\"Droid\\\\\", \\\\\"Skakoan\\\\\", \\\\\"Muun\\\\\", \\\\\"Togruta\\\\\", \\\\\"Kaleesh\\\\\", \", \"\\\\\"Wookiee\\\\\", \\\\\"Human\\\\\", NA, \\\\\"Pau'an\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \", \"\\\\\"Droid\\\\\", \\\\\"Human\\\\\"), sex = c(\\\\\"male\\\\\", \\\\\"none\\\\\", \\\\\"none\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \", \"\\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"none\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \\n\"\\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"hermaphroditic\\\\\", \\\\\"male\\\\\", NA, \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"none\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", NA, NA, \\\\\"male\\\\\", \", \\n\"\\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"none\\\\\", \\\\\"male\\\\\", \", \"\\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", NA, \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"\\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"none\\\\\", \\\\\"female\\\\\")), class = c(\\\\\"grouped_df\\\\\", \", \"\\\\\"tbl_df\\\\\", \\\\\"tbl\\\\\", \\\\\"data.frame\\\\\"), row.names = c(NA, -87L), groups = structure(list(\", \"    species = c(\\\\\"Aleena\\\\\", \\\\\"Besalisk\\\\\", \\\\\"Cerean\\\\\", \\\\\"Chagrian\\\\\", \\\\\"Clawdite\\\\\", \", \"    \\\\\"Droid\\\\\", \\\\\"Dug\\\\\", \\\\\"Ewok\\\\\", \\\\\"Geonosian\\\\\", \\\\\"Gungan\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \", \\n\"    \\\\\"Hutt\\\\\", \\\\\"Iktotchi\\\\\", \\\\\"Kaleesh\\\\\", \\\\\"Kaminoan\\\\\", \\\\\"Kaminoan\\\\\", \\\\\"Kel Dor\\\\\", \", \"    \\\\\"Mirialan\\\\\", \\\\\"Mon Calamari\\\\\", \\\\\"Muun\\\\\", \\\\\"Nautolan\\\\\", \\\\\"Neimodian\\\\\", \", \"    \\\\\"Pau'an\\\\\", \\\\\"Quermian\\\\\", \\\\\"Rodian\\\\\", \\\\\"Skakoan\\\\\", \\\\\"Sullustan\\\\\", \\\\\"Tholothian\\\\\", \", \"    \\\\\"Togruta\\\\\", \\\\\"Toong\\\\\", \\\\\"Toydarian\\\\\", \\\\\"Trandoshan\\\\\", \\\\\"Twi'lek\\\\\", \", \"    \\\\\"Twi'lek\\\\\", \\\\\"Vulptereen\\\\\", \\\\\"Wookiee\\\\\", \\\\\"Xexto\\\\\", \\\\\"Yoda's species\\\\\", \", \"    \\\\\"Zabrak\\\\\", NA), sex = c(\\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \", \"    \\\\\"none\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \", \\n\"    \\\\\"hermaphroditic\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"    \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"    \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"    \\\\\"male\\\\\", \\\\\"female\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \\\\\"male\\\\\", \", \"    \\\\\"male\\\\\", NA), .rows = structure(list(46L, 70L, 51L, 58L, 69L, \", \"        c(2L, 3L, 8L, 22L, 74L, 86L), 40L, 29L, 62L, 35:37, c(5L, \", \"        7L, 27L, 34L, 42L, 65L, 73L, 84L, 87L), c(1L, 4L, 6L, \", \\n\"        9L, 10L, 11L, 12L, 14L, 17L, 20L, 21L, 24L, 25L, 28L, \", \"        31L, 33L, 38L, 41L, 50L, 61L, 66L, 67L, 68L, 80L, 83L, \", \"        85L), 16L, 55L, 78L, 72L, 71L, 57L, 63:64, 26L, 76L, \", \"        52L, 32L, 82L, 56L, 15L, 75L, 30L, 54L, 77L, 49L, 39L, \", \"        23L, 45L, 44L, 47L, c(13L, 79L), 48L, 19L, c(43L, 53L\", \"        ), c(18L, 59L, 60L, 81L)), ptype = integer(0), class = c(\\\\\"vctrs_list_of\\\\\", \", \"    \\\\\"vctrs_vctr\\\\\", \\\\\"list\\\\\"))), class = c(\\\\\"tbl_df\\\\\", \\\\\"tbl\\\\\", \\\\\"data.frame\\\\\"\", \"), row.names = c(NA, -41L), .drop = TRUE))\"\\n), sex != \"malec(\"structure(list(height = c(167L, 96L, 150L, 165L, 97L, 175L, 200L, \", \"150L, 185L, 163L, 178L, 184L, 170L, 166L, 165L, 168L, 213L, 167L, \", \"96L, 178L, NA, NA, NA), mass = c(75, 32, 49, 75, 32, 1358, 140, \", \"NA, 45, NA, 55, 50, 56.2, 50, NA, 55, NA, NA, NA, 57, NA, NA, \", \"NA), species = c(\\\\\"Droid\\\\\", \\\\\"Droid\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Droid\\\\\", \", \"\\\\\"Hutt\\\\\", \\\\\"Droid\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Human\\\\\", \\\\\"Twi'lek\\\\\", \\\\\"Tholothian\\\\\", \", \"\\\\\"Mirialan\\\\\", \\\\\"Mirialan\\\\\", \\\\\"Human\\\\\", \\\\\"Clawdite\\\\\", \\\\\"Kaminoan\\\\\", \\\\\"Human\\\\\", \", \\n\"\\\\\"Droid\\\\\", \\\\\"Togruta\\\\\", \\\\\"Human\\\\\", \\\\\"Droid\\\\\", \\\\\"Human\\\\\"), sex = c(\\\\\"none\\\\\", \", \"\\\\\"none\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"none\\\\\", \\\\\"hermaphroditic\\\\\", \\\\\"none\\\\\", \", \"\\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \", \"\\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"none\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \", \"\\\\\"none\\\\\", \\\\\"female\\\\\")), class = c(\\\\\"grouped_df\\\\\", \\\\\"tbl_df\\\\\", \\\\\"tbl\\\\\", \", \"\\\\\"data.frame\\\\\"), row.names = c(NA, -23L), groups = structure(list(\", \"    species = c(\\\\\"Clawdite\\\\\", \\\\\"Droid\\\\\", \\\\\"Human\\\\\", \\\\\"Hutt\\\\\", \\\\\"Kaminoan\\\\\", \", \\n\"    \\\\\"Mirialan\\\\\", \\\\\"Tholothian\\\\\", \\\\\"Togruta\\\\\", \\\\\"Twi'lek\\\\\"), sex = c(\\\\\"female\\\\\", \", \"    \\\\\"none\\\\\", \\\\\"female\\\\\", \\\\\"hermaphroditic\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \\\\\"female\\\\\", \", \"    \\\\\"female\\\\\", \\\\\"female\\\\\"), .rows = structure(list(16L, c(1L, 2L, \", \"    5L, 7L, 19L, 22L), c(3L, 4L, 8L, 9L, 10L, 15L, 18L, 21L, \", \"    23L), 6L, 17L, 13:14, 12L, 20L, 11L), ptype = integer(0), class = c(\\\\\"vctrs_list_of\\\\\", \", \"    \\\\\"vctrs_vctr\\\\\", \\\\\"list\\\\\"))), row.names = c(NA, -9L), .drop = TRUE, class = c(\\\\\"tbl_df\\\\\", \", \"\\\\\"tbl\\\\\", \\\\\"data.frame\\\\\")))\"\\n), mean(mass, na.rm = TRUE) #>   message          start_time            end_time          run_time     g #> 1      NA 2025-08-14 18:00:21 2025-08-14 18:00:21 0.0007340908 secs 87, 4 #> 2      NA 2025-08-14 18:00:21 2025-08-14 18:00:21 0.0009417534 secs    NA #> 3      NA 2025-08-14 18:00:21 2025-08-14 18:00:21 0.0008695126 secs 23, 4 #> 4      NA 2025-08-14 18:00:21 2025-08-14 18:00:21 0.0011363029 secs  9, 3 #>   diff_obj lag_outcome #> 1     NULL        <NA> #> 2     NULL OK! Success #> 3     NULL OK! Success #> 4     NULL OK! Success check_g(output_pipe) #>   ops_number  function     g #> 1          1    select 87, 4 #> 2          2  group_by    NA #> 3          3    filter 23, 4 #> 4          4 summarise  9, 3 r_group_by <- record(group_by) r_select <- record(select, diff = \"full\") r_summarise <- record(summarise, diff = \"full\") r_filter <- record(filter, diff = \"full\")  output_pipe <- starwars %>%   r_select(height, mass, species, sex) %>=%   r_group_by(species, sex) %>=%   r_filter(sex != \"male\") %>=%   r_summarise(mass = mean(mass, na.rm = TRUE)) # The following line generates a data frame with columns `ops_number`, `function` and `diff_obj` # it is possible to filter on the step of interest using the `ops_number` or the `function` column diff_pipe <- check_diff(output_pipe)  diff_pipe %>%   filter(`function` == \"filter\") %>%  # <- backticks around `function` are required   pull(diff_obj) #> [[1]] #> < input                                  #> > output                                 #> @@ 1,15 / 1,15 @@                        #> < # A tibble: 87 √ó 4                     #> > # A tibble: 23 √ó 4                     #> < # Groups:   species, sex [41]          #> > # Groups:   species, sex [9]           #>      height  mass species sex            #>       <int> <dbl> <chr>   <chr>          #> <  1    172    77 Human   male           #>    2    167    75 Droid   none           #>    3     96    32 Droid   none           #> <  4    202   136 Human   male           #>    5    150    49 Human   female         #> <  6    178   120 Human   male           #>    7    165    75 Human   female         #>    8     97    32 Droid   none           #> >  6    175  1358 Hutt    hermaphroditic #> >  7    200   140 Droid   none           #> <  9    183    84 Human   male           #> >  8    150    NA Human   female         #> < 10    182    77 Human   male           #> >  9    185    45 Human   female         #> > 10    163    NA Human   female         #> < # ‚Ñπ 77 more rows                       #> > # ‚Ñπ 13 more rows r_group_by <- record(group_by) r_select <- record(select, diff = \"summary\") r_summarise <- record(summarise, diff = \"summary\") r_filter <- record(filter, diff = \"summary\")  output_pipe <- starwars %>%   r_select(height, mass, species, sex) %>=%   r_group_by(species, sex) %>=%   r_filter(sex != \"male\") %>=%   r_summarise(mass = mean(mass, na.rm = TRUE))  diff_pipe <- check_diff(output_pipe)  diff_pipe %>%   filter(`function` == \"filter\") %>%  # <- backticks around `function` are required   pull(diff_obj) #> [[1]] #>  #> Found differences in 5 hunks: #>   8 insertions, 8 deletions, 7 matches (lines) #>  #> Diff map (line:char scale is 1:1 for single chars, 1:1 for char seqs): #>   DDII..D..D.D..DDDIIIIII"},{"path":"https://b-rodrigues.github.io/chronicler/index.html","id":"recording-ggplot","dir":"","previous_headings":"","what":"Recording ggplot","title":"Add Logging to Functions","text":"package provides record() implementation ggplot2 called record_ggplot(). separate function two main reasons: ggplot specifications composed multiple function calls. ggplot specifications lazily evaluated, meaning errors aren‚Äôt thrown immediately. example: error thrown force evaluation, example printing plot_1. function record_ggplot() takes ggplot specification first argument. can also take strict argument mentioned . output function record():","code":"# Notice the double \"g\" in \"mpgg\"  plot_1 <- ggplot(data = mtcars) + geom_point(aes(y = hp, x = mpgg)) # The error is not thrown here due to ggplot's lazy evaluation r_plot_1 <- record_ggplot(ggplot(data = mtcars) + geom_point(aes(y = hp, x = mpg))) unveil(r_plot_1, \"value\") read_log(r_plot_1) #> [1] \"Complete log:\"                                                                                                 #> [2] \"OK! ggplot(data = mtcars) + geom_point(aes(y = hp, x = mpg))() ran successfully at 2025-08-14 18:00:22.520489\" #> [3] \"Total running time: 0.06168532371521\""},{"path":"https://b-rodrigues.github.io/chronicler/index.html","id":"thanks","dir":"","previous_headings":"","what":"Thanks","title":"Add Logging to Functions","text":"‚Äôd like thank armcn, Kupac blog posts () packages (maybe) inspired build package. Thank well TimTeaFan help writing %>=% infix operator, nigrahamuk showing nice way catch errors, finally Mwavu pointing towards right direction issue ‚Äôve started working package. Thanks Putosaure designing hex logo.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/as.data.frame.chronicle.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a chronicle object to a data.frame ‚Äî as.data.frame.chronicle","title":"Coerce a chronicle object to a data.frame ‚Äî as.data.frame.chronicle","text":"S3 method allows easy coercion chronicle object standard data.frame. automatically unwraps object calling unveil(.c, \"value\") attempts convert result data frame.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/as.data.frame.chronicle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a chronicle object to a data.frame ‚Äî as.data.frame.chronicle","text":"","code":"# S3 method for class 'chronicle' as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/as.data.frame.chronicle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a chronicle object to a data.frame ‚Äî as.data.frame.chronicle","text":"x chronicle object. row.names NULL character vector giving row names data frame. optional logical. TRUE, setting row names converting column names optional. ... Additional arguments passed methods.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/as.data.frame.chronicle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce a chronicle object to a data.frame ‚Äî as.data.frame.chronicle","text":"data.frame value inside chronicle object data.frame can successfully coerced one.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/as.data.frame.chronicle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce a chronicle object to a data.frame ‚Äî as.data.frame.chronicle","text":"function produce error underlying value chronicle object coerced data frame base .data.frame() method. error message specific, indicating class object caused failure.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/as.data.frame.chronicle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce a chronicle object to a data.frame ‚Äî as.data.frame.chronicle","text":"","code":"library(dplyr) #>  #> Attaching package: ‚Äòdplyr‚Äô #> The following objects are masked from ‚Äòpackage:stats‚Äô: #>  #>     filter, lag #> The following objects are masked from ‚Äòpackage:base‚Äô: #>  #>     intersect, setdiff, setequal, union  # --- Successful Example ---  # Create a chronicle object whose value is a data frame starwars_chronicle <- starwars %>%   record(filter)(species == \"Human\") %>%   bind_record(record(select), name, height, mass)  # Now, you can use as.data.frame() directly on the chronicle object sw_df <- as.data.frame(starwars_chronicle)  class(sw_df) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\" head(sw_df) #> # A tibble: 6 √ó 3 #>   name               height  mass #>   <chr>               <int> <dbl> #> 1 Luke Skywalker        172    77 #> 2 Darth Vader           202   136 #> 3 Leia Organa           150    49 #> 4 Owen Lars             178   120 #> 5 Beru Whitesun Lars    165    75 #> 6 Biggs Darklighter     183    84   # --- Error Example ---  # Create a chronicle object whose value is a number numeric_chronicle <- record(sqrt)(100)  # This will fail with a specific error message because a number # cannot be turned into a data frame. try(as.data.frame(numeric_chronicle)) #>   value #> 1    10"},{"path":"https://b-rodrigues.github.io/chronicler/reference/as_chronicle.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object to a chronicle object. ‚Äî as_chronicle","title":"Coerce an object to a chronicle object. ‚Äî as_chronicle","text":"Coerce object chronicle object.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/as_chronicle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object to a chronicle object. ‚Äî as_chronicle","text":"","code":"as_chronicle(.x, .log_df = data.frame())"},{"path":"https://b-rodrigues.github.io/chronicler/reference/as_chronicle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object to a chronicle object. ‚Äî as_chronicle","text":".x object. .log_df Used internally, user need interact . Defaults empty data frame.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/as_chronicle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object to a chronicle object. ‚Äî as_chronicle","text":"Returns chronicle object object $value.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/as_chronicle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object to a chronicle object. ‚Äî as_chronicle","text":"","code":"as_chronicle(3) #> OK! Value computed successfully: #> --------------- #> Just #> [1] 3 #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). #>"},{"path":"https://b-rodrigues.github.io/chronicler/reference/avia.html","id":null,"dir":"Reference","previous_headings":"","what":"avia Air passenger transport between the main airports of Luxembourg and their main partner airports ‚Äî avia","title":"avia Air passenger transport between the main airports of Luxembourg and their main partner airports ‚Äî avia","text":"non-tidy dataset EUROSTAT can found .","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/avia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"avia Air passenger transport between the main airports of Luxembourg and their main partner airports ‚Äî avia","text":"","code":"avia"},{"path":"https://b-rodrigues.github.io/chronicler/reference/avia.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"avia Air passenger transport between the main airports of Luxembourg and their main partner airports ‚Äî avia","text":"data frame 1,434 rows 332 columns.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/bind_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a decorated function; used to chain multiple decorated functions. ‚Äî bind_record","title":"Evaluate a decorated function; used to chain multiple decorated functions. ‚Äî bind_record","text":"Evaluate decorated function; used chain multiple decorated functions.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/bind_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a decorated function; used to chain multiple decorated functions. ‚Äî bind_record","text":"","code":"bind_record(.c, .f, ...)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/bind_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a decorated function; used to chain multiple decorated functions. ‚Äî bind_record","text":".c chronicle object. .f chronicle function apply returning value .c. ... parameters pass .f.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/bind_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a decorated function; used to chain multiple decorated functions. ‚Äî bind_record","text":"chronicle object.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/bind_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a decorated function; used to chain multiple decorated functions. ‚Äî bind_record","text":"","code":"r_sqrt <- record(sqrt) r_exp <- record(exp) 3 |> r_sqrt() |> bind_record(r_exp) #> OK! Value computed successfully: #> --------------- #> Just #> [1] 5.652234 #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). #>"},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the output of the diff column ‚Äî check_diff","title":"Check the output of the diff column ‚Äî check_diff","text":"Check output diff column","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the output of the diff column ‚Äî check_diff","text":"","code":"check_diff(.c, columns = c(\"ops_number\", \"function\"))"},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the output of the diff column ‚Äî check_diff","text":".c chronicle object. columns Columns select output. Defaults c(\"ops_number\", \"function\").","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the output of the diff column ‚Äî check_diff","text":"data.frame selected columns column \"diff_obj\".","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the output of the diff column ‚Äî check_diff","text":"diff option argument record() function. diff = \"full\", diff input output decorated function gets saved, diff = \"summary\" summary diff saved.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the output of the diff column ‚Äî check_diff","text":"","code":"r_subset <- record(subset, diff = \"full\") result <- r_subset(mtcars, select = am) check_diff(result) # <- this is the data frame listing the operations and the accompanying diffs #>   ops_number function                                            diff_obj #> 1          1   subset <S4 class ‚ÄòDiff‚Äô [package ‚Äúdiffobj‚Äù] with 14 slots> check_diff(result)$diff_obj # <- actually look at the diffs #> [[1]] #> < str(input)                             > str(output)                           #> @@ 1,12 @@                               @@ 1,2 @@                               #> < 'data.frame':   32 obs. of  11 variab  > 'data.frame':   32 obs. of  1 variabl #> : les:                                   : e:                                    #> <  $ mpg : num  21 21 22.8 21.4 18.7 18  ~                                       #> : .1 14.3 24.4 22.8 19.2 ...             ~                                       #> <  $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...  ~                                       #> <  $ disp: num  160 160 108 258 360 ...  ~                                       #> <  $ hp  : num  110 110 93 110 175 105   ~                                       #> : 245 62 95 123 ...                      ~                                       #> <  $ drat: num  3.9 3.9 3.85 3.08 3.15   ~                                       #> : 2.76 3.21 3.69 3.92 3.92 ...           ~                                       #> <  $ wt  : num  2.62 2.88 2.32 3.21 3.4  ~                                       #> : 4 ...                                  ~                                       #> <  $ qsec: num  16.5 17 18.6 19.4 17 ..  ~                                       #> : .                                      ~                                       #> <  $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...  ~                                       #>    $ am  : num  1 1 1 0 0 0 0 0 0 0 ...     $ am: num  1 1 1 0 0 0 0 0 0 0 ...   #> <  $ gear: num  4 4 4 3 3 3 3 4 4 4 ...  ~                                       #> <  $ carb: num  4 4 1 1 2 1 4 2 2 4 ...  ~                                       #>"},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_g.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the output of the .g function ‚Äî check_g","title":"Check the output of the .g function ‚Äî check_g","text":"Check output .g function","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_g.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the output of the .g function ‚Äî check_g","text":"","code":"check_g(.c, columns = c(\"ops_number\", \"function\"))"},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_g.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the output of the .g function ‚Äî check_g","text":".c chronicle object. columns Columns select output. Defaults c(\"ops_number\", \"function\").","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_g.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the output of the .g function ‚Äî check_g","text":"data.frame selected columns column \"g\".","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_g.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the output of the .g function ‚Äî check_g","text":".g option argument record() function. Providing optional function allows , step pipeline, monitor interesting characteristics value object. See package's Readme file example data frames.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/check_g.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the output of the .g function ‚Äî check_g","text":"","code":"r_subset <- record(subset, .g = dim) result <- r_subset(mtcars, select = am) check_g(result) #>   ops_number function     g #> 1          1   subset 32, 1"},{"path":"https://b-rodrigues.github.io/chronicler/reference/flatten_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten nested chronicle objects ‚Äî flatten_record","title":"Flatten nested chronicle objects ‚Äî flatten_record","text":"Flatten nested chronicle objects","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/flatten_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten nested chronicle objects ‚Äî flatten_record","text":"","code":"flatten_record(.c)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/flatten_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten nested chronicle objects ‚Äî flatten_record","text":".c nested chronicle object, $value element chronicle object","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/flatten_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten nested chronicle objects ‚Äî flatten_record","text":"Returns .c value actual value, logs concatenated.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/flatten_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten nested chronicle objects ‚Äî flatten_record","text":"","code":"r_sqrt <- record(sqrt) r_log <- record(log) a <- as_chronicle(r_log(10)) a #> OK! Value computed successfully: #> --------------- #> Just #> OK! Value computed successfully: #> --------------- #> Just #> [1] 2.302585 #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). #>  #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). #>  flatten_record(a) #> OK! Value computed successfully: #> --------------- #> Just #> [1] 2.302585 #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). #>"},{"path":"https://b-rodrigues.github.io/chronicler/reference/fmap_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a non-chronicle function on a chronicle object. ‚Äî fmap_record","title":"Evaluate a non-chronicle function on a chronicle object. ‚Äî fmap_record","text":"Evaluate non-chronicle function chronicle object.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/fmap_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a non-chronicle function on a chronicle object. ‚Äî fmap_record","text":"","code":"fmap_record(.c, .f, ...)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/fmap_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a non-chronicle function on a chronicle object. ‚Äî fmap_record","text":".c chronicle object. .f non-chronicle function. ... parameters pass .f.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/fmap_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a non-chronicle function on a chronicle object. ‚Äî fmap_record","text":"Returns result .f(.c$value) new chronicle object.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/fmap_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a non-chronicle function on a chronicle object. ‚Äî fmap_record","text":"","code":"as_chronicle(3) |> fmap_record(sqrt) #> OK! Value computed successfully: #> --------------- #> Just #> [1] 1.732051 #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). #>"},{"path":"https://b-rodrigues.github.io/chronicler/reference/grapes-greater-than-equals-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe a chronicle object to a decorated function. ‚Äî %>=%","title":"Pipe a chronicle object to a decorated function. ‚Äî %>=%","text":"Pipe chronicle object decorated function.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/grapes-greater-than-equals-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe a chronicle object to a decorated function. ‚Äî %>=%","text":"","code":".c %>=% .f"},{"path":"https://b-rodrigues.github.io/chronicler/reference/grapes-greater-than-equals-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe a chronicle object to a decorated function. ‚Äî %>=%","text":".c value returned record. .f chronicle function apply returning value .c.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/grapes-greater-than-equals-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe a chronicle object to a decorated function. ‚Äî %>=%","text":"chronicle object.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/grapes-greater-than-equals-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pipe a chronicle object to a decorated function. ‚Äî %>=%","text":"","code":"r_sqrt <- record(sqrt) r_exp <- record(exp) 3 |> r_sqrt() %>=% r_exp() #> OK! Value computed successfully: #> --------------- #> Just #> [1] 5.652234 #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). #>"},{"path":"https://b-rodrigues.github.io/chronicler/reference/is_chronicle.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether an object is of class ","title":"Checks whether an object is of class ","text":"Checks whether object class \"chronicle\"","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/is_chronicle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether an object is of class ","text":"","code":"is_chronicle(.x)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/is_chronicle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether an object is of class ","text":".x object test.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/is_chronicle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether an object is of class ","text":"TRUE .x class \"chronicle\", FALSE .","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/print.chronicle.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for chronicle objects. ‚Äî print.chronicle","title":"Print method for chronicle objects. ‚Äî print.chronicle","text":"Print method chronicle objects.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/print.chronicle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for chronicle objects. ‚Äî print.chronicle","text":"","code":"# S3 method for class 'chronicle' print(x, ...)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/print.chronicle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for chronicle objects. ‚Äî print.chronicle","text":"x chronicle object. ... Unused.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/print.chronicle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for chronicle objects. ‚Äî print.chronicle","text":"return value, called side effects (printing object screen).","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/print.chronicle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print method for chronicle objects. ‚Äî print.chronicle","text":"chronicle object , core, lists following elements: \"$value\": object type maybe containing result computation (see \"Maybe monad\" vignette details maybes). \"$log_df\": data.frame object containing printed object‚Äôs log information. print.chronicle() prints object screen shows: value using print() method (example, value data.frame, print.data.frame() used) message indicating user recuperate value inside chronicle object read object‚Äôs log","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/purely.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture all errors, warnings and messages. ‚Äî purely","title":"Capture all errors, warnings and messages. ‚Äî purely","text":"Capture errors, warnings messages.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/purely.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture all errors, warnings and messages. ‚Äî purely","text":"","code":"purely(.f, strict = 2)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/purely.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture all errors, warnings and messages. ‚Äî purely","text":".f function decorate. strict Controls decorated function catch errors (1), errors warnings (2, default) errors, warnings messages (3).","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/purely.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture all errors, warnings and messages. ‚Äî purely","text":"function returns list. first element list, $value, result original function .f applied inputs. second element, $log NULL case everything goes well. case error/warning/message, $value NA $log holds message. purely() used record() allow latter handle errors.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/purely.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capture all errors, warnings and messages. ‚Äî purely","text":"","code":"purely(log)(10) #> $value #> Just #> [1] 2.302585 #>  #> $log_df #> [1] NA #>  purely(log)(-10) #> $value #> Nothing #>  #> $log_df #> [1] \"NaNs produced\" #>  purely(log, strict = 1)(-10) # This produces a warning, so with strict = 1 nothing gets captured. #> Warning: NaNs produced #> $value #> Just #> [1] NaN #>  #> $log_df #> [1] NA #>"},{"path":"https://b-rodrigues.github.io/chronicler/reference/read_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and display the log of a chronicle ‚Äî read_log","title":"Read and display the log of a chronicle ‚Äî read_log","text":"read_log() provides different human-readable views log information stored chronicle object. can show pretty, narrative-style summary, tabular summary suitable inspection debugging, compact error-focused report.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/read_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and display the log of a chronicle ‚Äî read_log","text":"","code":"read_log(.c, style = c(\"pretty\", \"table\", \"errors-only\"))"},{"path":"https://b-rodrigues.github.io/chronicler/reference/read_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and display the log of a chronicle ‚Äî read_log","text":".c chronicle object. style string indicating display style. One : \"pretty\": short, human-friendly log OK/NOK status, function names, timestamps, runtimes. \"table\": tabular summary log data frame, including function names, status, runtime, messages. \"errors-\": minimal report. steps succeed, single success message shown. step fails, failures listed.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/read_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and display the log of a chronicle ‚Äî read_log","text":"style = \"pretty\": character vector sentences. style = \"table\": data frame summarising log (attribute \"total_runtime_secs\" storing total runtime seconds). style = \"errors-\": character string succeeded, character vector listing failed steps.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/read_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and display the log of a chronicle ‚Äî read_log","text":"","code":"r_select <- record(dplyr::select) r_group_by <- record(dplyr::group_by) r_summarise <- record(dplyr::summarise)  output <- dplyr::starwars %>%   r_select(height, mass, species, sex) %>%   bind_record(r_group_by, species, sex) %>%   bind_record(r_summarise, mass = mean(mass, na.rm = TRUE))  read_log(output, style = \"pretty\") #> [1] \"OK `dplyr::select` at 11:38:29 (0.001s)\"    #> [2] \"OK `dplyr::group_by` at 11:38:29 (0.002s)\"  #> [3] \"OK `dplyr::summarise` at 11:38:29 (0.003s)\" #> [4] \"Total: 0.007 secs\"                          read_log(output, style = \"table\") #>   step             func status runtime message #> 1    1    dplyr::select     OK   0.001      NA #> 2    2  dplyr::group_by     OK   0.002      NA #> 3    3 dplyr::summarise     OK   0.003      NA read_log(output, style = \"errors-only\") #> [1] \"Pipeline ran 3 steps successfully in 0.007 secs\""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record.html","id":null,"dir":"Reference","previous_headings":"","what":"Decorates a function to output objects of type chronicle. ‚Äî record","title":"Decorates a function to output objects of type chronicle. ‚Äî record","text":"Decorates function output objects type chronicle.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decorates a function to output objects of type chronicle. ‚Äî record","text":"","code":"record(.f, .g = (function(x) NA), strict = 2, diff = \"none\")"},{"path":"https://b-rodrigues.github.io/chronicler/reference/record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decorates a function to output objects of type chronicle. ‚Äî record","text":".f function decorate. .g Optional. function apply intermediary results monitoring purposes. Defaults returning NA. strict Controls decorated function catch errors (1), errors warnings (2, default) errors, warnings messages (3). diff Whether show diff input output (\"full\"), just summary diff (\"summary\"), none (\"none\", default)","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decorates a function to output objects of type chronicle. ‚Äî record","text":"function returns objects type chronicle. chronicle objects carry several elements: value result function evaluated inputs second object called log_df. log_df contains logging information, can read using read_log(). log_df data frame columns: outcome, function, arguments, message, start_time, end_time, run_time, g diff_obj.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decorates a function to output objects of type chronicle. ‚Äî record","text":"chain multiple decorated function, use bind_record() %>=%. diff parameter set \"full\", diffobj::diffObj() (diffobj::summary(diffobj::diffObj(), diff set \"summary\") gets used provide diff input output. diff can found log_df element result, can viewed using check_diff().","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decorates a function to output objects of type chronicle. ‚Äî record","text":"","code":"record(sqrt)(10) #> OK! Value computed successfully: #> --------------- #> Just #> [1] 3.162278 #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). #>  record(sqrt)(x = 10) #> OK! Value computed successfully: #> --------------- #> Just #> [1] 3.162278 #>  #> --------------- #> This is an object of type `chronicle`. #> Retrieve the value of this object with unveil(.c, \"value\"). #> To read the log of this object, call read_log(.c). #>"},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Record a ggplot expression ‚Äî record_ggplot","title":"Record a ggplot expression ‚Äî record_ggplot","text":"record_ggplot captures complete {ggplot2} expression, evaluates , creates chronicle object. uses robust tryCatch withCallingHandlers pattern reliably capture errors, warnings, messages. trigger conditions, including rendering-time warnings messages, forces full render plot. achieved safely opening null graphics device (pdf(NULL)), scheduling closure .exit(dev.()), printing plot. guarantees temporary device always closed, even error occurs, preventing side effects user's active graphics session.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record a ggplot expression ‚Äî record_ggplot","text":"","code":"record_ggplot(ggplot_expression, strict = 2)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record a ggplot expression ‚Äî record_ggplot","text":"ggplot_expression entire {ggplot2} expression recorded. strict optional integer argument controlling treated failure: 1: Catches errors. 2: Catches errors warnings (default). 3: Catches errors, warnings, messages.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record a ggplot expression ‚Äî record_ggplot","text":"chronicle object. printed, display plot successful error plot failed.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_many.html","id":null,"dir":"Reference","previous_headings":"","what":"Decorate a list of functions ‚Äî record_many","title":"Decorate a list of functions ‚Äî record_many","text":"Decorate list functions","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_many.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decorate a list of functions ‚Äî record_many","text":"","code":"record_many(list_funcs, .g = (function(x) NA), strict = 2, diff = \"none\")"},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_many.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decorate a list of functions ‚Äî record_many","text":"list_funcs list function names, strings. .g Optional. Defaults function returns NA. strict Controls decorated function catch errors (1), errors warnings (2, default) errors, warnings messages (3). diff Whether show diff input output (\"full\"), just summary diff (\"summary\"), none (\"none\", default)","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_many.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decorate a list of functions ‚Äî record_many","text":"Puts string systems clipboard.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_many.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decorate a list of functions ‚Äî record_many","text":"Functions must entered strings form \"function\" \"package::function\". code gets generated copied clipboard. code can pasted text editor. GNU/Linux systems, might get following error message first use: \"Error : Clipboard X11 requires DISPLAY envvar configured\". error message clipr::write_clip(), used record_many() put generated code system's clipboard. solve issue, run echo $DISPLAY system's shell. command return string like \":0\". Take note string. .Rprofile, put following command: Sys.setenv(DISPLAY = \":0\") restart R session. record_many() now work.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/record_many.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decorate a list of functions ‚Äî record_many","text":"","code":"if (FALSE) { # \\dontrun{ list_funcs <- list(\"exp\", \"dplyr::select\", \"exp\") record_many(list_funcs) } # }"},{"path":"https://b-rodrigues.github.io/chronicler/reference/unveil.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an element from a chronicle object. ‚Äî unveil","title":"Retrieve an element from a chronicle object. ‚Äî unveil","text":"Retrieve element chronicle object.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/unveil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an element from a chronicle object. ‚Äî unveil","text":"","code":"unveil(.c, .e = \"value\")"},{"path":"https://b-rodrigues.github.io/chronicler/reference/unveil.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an element from a chronicle object. ‚Äî unveil","text":".c chronicle object. .e Element interest retrieve, one \"value\" (default) \"log_df\".","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/unveil.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an element from a chronicle object. ‚Äî unveil","text":"value log_df element chronicle object .c.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/unveil.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an element from a chronicle object. ‚Äî unveil","text":"","code":"r_sqrt <- record(sqrt) r_exp <- record(exp) 3 |> r_sqrt() %>=% r_exp() |> unveil(\"value\") #> [1] 5.652234"},{"path":"https://b-rodrigues.github.io/chronicler/reference/write_chronicle_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a chronicler Data Frame object to a file ‚Äî write_chronicle_df","title":"Write a chronicler Data Frame object to a file ‚Äî write_chronicle_df","text":"Saves contents chronicler object CSV Excel file, including dataset log operations. data stored value component chronicler object, log included metadata output.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/write_chronicle_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a chronicler Data Frame object to a file ‚Äî write_chronicle_df","text":"","code":"write_chronicle_df(.c, path, row.names = FALSE, sep = \",\", ...)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/write_chronicle_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a chronicler Data Frame object to a file ‚Äî write_chronicle_df","text":".c chronicler object. path single character string specifying output file path. file extension must either .csv .xlsx. row.names Logical, whether include row names writing CSV. Defaults FALSE. sep Character. Field separator CSV output. Defaults \",\". ... Additional arguments passed write.table writing CSV.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/write_chronicle_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a chronicler Data Frame object to a file ‚Äî write_chronicle_df","text":"Invisibly returns NULL. function called side effect writing files.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/write_chronicle_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a chronicler Data Frame object to a file ‚Äî write_chronicle_df","text":"writing CSV file, first lines contain log operations performed data. Users skip lines reading data back . writing Excel file, two sheets created: value containing dataset, log containing log operations data frame better readability.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/write_chronicle_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a chronicler Data Frame object to a file ‚Äî write_chronicle_df","text":"","code":"if (FALSE) { # \\dontrun{ # Assume `c` is a chronicler object write_chronicle_df(c, path = \"output.csv\") write_chronicle_df(c, path = \"output.xlsx\") } # }"},{"path":"https://b-rodrigues.github.io/chronicler/reference/zap_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Zap the log of a chronicle object ‚Äî zap_log","title":"Zap the log of a chronicle object ‚Äî zap_log","text":"function replaces entire existing log chronicle object single, new entry. new entry simply records log \"zapped\" time occurred. useful simplifying chronicle object saving sharing, mark definitive checkpoint workflow, effectively discarding previous history. underlying value object remains completely unchanged.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/zap_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zap the log of a chronicle object ‚Äî zap_log","text":"","code":"zap_log(.c)"},{"path":"https://b-rodrigues.github.io/chronicler/reference/zap_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zap the log of a chronicle object ‚Äî zap_log","text":".c chronicle object.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/zap_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zap the log of a chronicle object ‚Äî zap_log","text":"new chronicle object value input, log_df replaced single entry.","code":""},{"path":"https://b-rodrigues.github.io/chronicler/reference/zap_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zap the log of a chronicle object ‚Äî zap_log","text":"","code":"library(dplyr)  # 1. Create a chronicle object with a multi-step log r_select <- record(select) r_filter <- record(filter)  original_chronicle <- starwars %>%   r_select(name, height, mass, species) %>%   bind_record(r_filter, species == \"Human\")  # 2. View the original, detailed log cat(\"--- Original Log ---\\n\") #> --- Original Log --- read_log(original_chronicle) #> [1] \"OK `select` at 11:38:31 (0.001s)\" \"OK `filter` at 11:38:31 (0.001s)\" #> [3] \"Total: 0.002 secs\"                 # 3. Zap the log zapped_chronicle <- zap_log(original_chronicle)  # 4. View the new, simplified log cat(\"\\n--- Zapped Log ---\\n\") #>  #> --- Zapped Log --- read_log(zapped_chronicle) #> [1] \"OK `zap_log` at 11:38:31 (0.000s)\" \"Total: 0.000 secs\"                  # 5. The underlying data value is unaffected identical(   unveil(original_chronicle, \"value\"),   unveil(zapped_chronicle, \"value\") ) #> [1] TRUE"},{"path":"https://b-rodrigues.github.io/chronicler/news/index.html","id":"chronicler-021","dir":"Changelog","previous_headings":"","what":"chronicler 0.2.1","title":"chronicler 0.2.1","text":"CRAN release: 2023-02-03","code":""},{"path":"https://b-rodrigues.github.io/chronicler/news/index.html","id":"maintenance-release-0-2-1","dir":"Changelog","previous_headings":"","what":"Maintenance release","title":"chronicler 0.2.1","text":"Compatibility dplyr 1.1.0 Changed link canonical link Readme.md","code":""},{"path":"https://b-rodrigues.github.io/chronicler/news/index.html","id":"chronicler-020","dir":"Changelog","previous_headings":"","what":"chronicler 0.2.0","title":"chronicler 0.2.0","text":"CRAN release: 2022-05-17","code":""},{"path":"https://b-rodrigues.github.io/chronicler/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"chronicler 0.2.0","text":"First CRAN release","code":""}]
